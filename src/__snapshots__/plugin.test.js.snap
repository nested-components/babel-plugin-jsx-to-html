// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugin Array Pattern as first argument 1`] = `
"
import * as h from \\"hyperhtml\\";
const Greet = ([name]) => html\`<span>Hello \${name}</span>\`;"
`;

exports[`plugin Basic Component 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<span>Hello \${name}</span>\`;"
`;

exports[`plugin Builtin component with object rest 1`] = `
"function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import { wire, Component } from 'hyperhtml';

const Demo = (_ref) => {
      let { name } = _ref,
          extra = _objectWithoutProperties(_ref, ['name']);

      return html\`<div \${extra}><h1>Hi \${name}</h1></div>\`;
};"
`;

exports[`plugin Components with multiple children 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<h1 class=\\"yo\\"><span>Hello \${name}</span>\${html(Icon, {
      name: \\"+1\\"
})}</h1>\`;"
`;

exports[`plugin Convert block statement 1`] = `
"
import { wire } from 'hyperhtml';
const Demo = ({ name }) => {
  const foo = true;
  return html\`<div>Hello \${foo ? name : name.toUpperCase()}</div>\`;
};"
`;

exports[`plugin Convert builtin props 1`] = `
"
import { wire, Component } from 'hyperhtml';

const Demo = () => html\`<span class=\\"hello\\" visible tabindex=\${-1}/>\`;"
`;

exports[`plugin Custom Components 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html;"
`;

exports[`plugin Custom Components with a single child 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html;"
`;

exports[`plugin Custom Components with mixed children 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html;"
`;

exports[`plugin Custom Components with multiple children 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html;"
`;

exports[`plugin Custom component with boolean property 1`] = `
"
import { wire } from 'hyperhtml';

const Demo = () => html;"
`;

exports[`plugin Custom component with object rest 1`] = `
"var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import { wire, Component } from 'hyperhtml';

const Demo = (_ref) => {
      let { name } = _ref,
          extra = _objectWithoutProperties(_ref, ['name']);

      return html;
};"
`;

exports[`plugin HyperComponent 1`] = `
"
import { Component } from \\"hyperhtml\\";

class Demo extends Component {
  constructor(props) {
    this.props = props;
  }

  render() {
    return html\`<div>
          <h1>Hello \${this.props.name}</h1>
        </div>\`;
  }
}"
`;

exports[`plugin HyperComponent with imported namespace 1`] = `
"
import * as H from \\"hyperhtml\\";

class Demo extends H.Component {
  constructor(props) {
    this.props = props;
  }

  render() {
    return html\`<div>
          <h1>Hello \${this.props.name}</h1>
        </div>\`;
  }
}"
`;

exports[`plugin Ignore file with no imports 1`] = `
"
import React from 'react';
const Demo = ({ name }) => html\`<div>\${name}</div>\`;"
`;

exports[`plugin Import namespace specifier 1`] = `
"
import * as h from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<span>Hello \${name}</span>\`;"
`;

exports[`plugin Import specifier 1`] = `
"
import { wire } from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<span>Hello \${name}</span>\`;"
`;

exports[`plugin MemberExpression in JSX 1`] = `
"
import { wire, Component } from 'hyperhtml';

const Demo = props => html;"
`;

exports[`plugin Multiple components 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greeter = ({ name }) => html\`<div class=\\"greeter\\">
      <h1>Hello \${name}!</h1>
    </div>\`;

const WelcomePage = ({ user }) => html\`<article class=\\"welcome-page\\">
      \${html(Greeter, {
  name: user.name
})}
    </article>\`;"
`;

exports[`plugin Nested Component 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<h1><span>Hello \${name}</span></h1>\`;"
`;

exports[`plugin Nested Component with attributes 1`] = `
"
import hyperHTML from \\"hyperhtml\\";
const Greet = ({ name }) => html\`<h1 class=\\"yo\\"><span>Hello \${name}</span></h1>\`;"
`;

exports[`plugin Non hyper class 1`] = `
"
import * as H from \\"hyperhtml\\";

class Demo extends H.Component {
  constructor(props) {
    this.props = props;
  }

  render() {
    return html\`<div>
          <h1>Hello \${this.props.name}</h1>
        </div>\`;
  }
}

class Demo2 {
  render() {
    return html\`<div/>\`;
  }
}"
`;

exports[`plugin Normal var as first argument 1`] = `
"
import * as h from \\"hyperhtml\\";
const Greet = props => html\`<span>Hello \${props.name}</span>\`;"
`;
